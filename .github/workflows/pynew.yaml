name: Update versi_python and Update python-telegram-bot

on:
  schedule:
    - cron: "0 * * * *"  # Runs every hour
  workflow_dispatch:

jobs:
  update_version:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Get latest release version of python-telegram-bot
        id: get_release
        run: |
          latest_version=$(curl -s https://api.github.com/repos/python-telegram-bot/python-telegram-bot/releases/latest | jq -r '.tag_name')
          echo "Latest version is $latest_version"
          # Save the version to an environment file
          echo "LATEST_VERSION=$latest_version" >> $GITHUB_ENV

      - name: Read current versi_python from versi file
        id: read_versi
        run: |
          # Extract the current versi_python value from the versi file
          current_version=$(grep -oP '^versi_python=\K.*' versi)
          echo "Current versi_python is $current_version"
          echo "CURRENT_VERSION=$current_version" >> $GITHUB_ENV

      - name: Debug environment variables
        run: |
          echo "LATEST_VERSION=${{ env.LATEST_VERSION }}"
          echo "CURRENT_VERSION=${{ env.CURRENT_VERSION }}"

      - name: Check if version needs updating
        run: |
          echo "Comparing versions..."
          if [ "$LATEST_VERSION" != "$CURRENT_VERSION" ]; then
            echo "Versions are different. Update needed."
            echo "UPDATE_NEEDED=true" >> $GITHUB_ENV
          else
            echo "Versions are the same. No update needed."
            echo "UPDATE_NEEDED=false" >> $GITHUB_ENV
          fi

      - name: Update versi file if necessary
        if: env.UPDATE_NEEDED == 'true'
        run: |
          # Replace the versi_python line with the latest version
          sed -i "s/^versi_python=.*/versi_python=${LATEST_VERSION}/" versi

      - name: Commit changes if version updated
        if: env.UPDATE_NEEDED == 'true'
        run: |
          git config --global user.name "GitHub Action"
          git config --global user.email "action@github.com"
          git add versi
          git commit -m "Update versi_python to ${LATEST_VERSION}"
          git push

      - name: Send Telegram notification if update found
        if: env.UPDATE_NEEDED == 'true'
        run: |
          curl -s -X POST "https://api.telegram.org/bot${{ secrets.BOT_TOKEN }}/sendMessage" \
          -d chat_id="${{ secrets.CHAT_ID }}" \
          -d text="Updated versi_python to ${LATEST_VERSION}" \
          -d message_thread_id="${{ secrets.THREAD_UPDATE_ID }}"
